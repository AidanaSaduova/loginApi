# This is the main configuration file for the application.
# ~~~~~

play.filters.headers.contentSecurityPolicy=null

# When using bean validation with the swagger api, the validator will check that every constraint is respected
# This is very useful when testing but could add a lot of overhead if you return a lot of data. Benchmark have
# shown that the time it takes to validate is exponential.
# If this is a concern in your application, or if you don't want to validate the output coming from your API for
# respecting its contract, set the "output" property below to "false". Since there is not a lot of data as input for
# an endpoint, I highly suggest you let the "input" property set to true.
useInputBeanValidation=true
useOutputBeanValidation=true

play.http.errorHandler="swagger.ErrorHandler"

## Akka

akka {

}

## Secret key
play.http.secret.key = "T^lVHGSJ4;UDxtr`[fNJ<Q0qTwiO^V5O=R?Ig`yOxtqa9Xxv`5B<[QnoLaKY1Fm="

## Modules

play.modules {

}

play.assets {
path = "/public"
urlPrefix = "/assets"
}

## IDE
play.i18n {
# The application languages
langs = [ "de","en" ]

}

## Play HTTP settings
# ~~~~~
play.http {

## Session & Flash
# ~~~~~
session {

}

flash {

}
}

## Netty Provider
# ~~~~~
play.server.netty {

}

## WS (HTTP Client)
play.ws {
# ~~~~~
ssl {

}
}

## Cache

play.cache {
#bindCaches = ["db-cache", "user-cache", "session-cache"]
}

## Filters

play.filters {

cors {
#allowedHttpMethods = ["GET", "POST"]
}

## CSRF Filter
csrf {
#cookie.secure = true

#errorHandler = MyCSRFErrorHandler
}

## Security headers filter configuration
play.filters.headers {

}

## Allowed hosts filter configuration
hosts {
#allowed = [".example.com", "localhost:9000"]
}
}

## Evolutions

play.evolutions {
#db.default.enabled = false
}

## Database Connection Pool
play.db {
#default = "default"


}

## JDBC Datasource
db {

default.driver = org.h2.Driver
default.driver = ${?DEFAULT_DB_DRIVER}

default.url = "jdbc:h2:mem:play;DATABASE_TO_UPPER=FALSE;MODE=MYSQL"
default.url = ${?DEFAULT_DB_URL}

default.logSql=false
}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default = ["models.*"]

# Mail
# ~~~~
smtp {
  debug = false,
  host = ${?SMTP_HOSTNAME},
  user = ${?SMTP_USER},
  password = ${?SMTP_PASSWD},
  mock = false
  ssl = true
  port = 465
}
